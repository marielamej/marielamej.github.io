body{
    display: flex;
    flex-direction: column;
    align-items: center;
    background-color: rgb(224, 185, 202);
    font-family: cursive;
    position: relative;
}
nav{
    height: 50vh;
    display:flex;
    flex-direction: row;
    justify-content: space-between;
    height:20px;
    background-color: blueviolet;
}
nav a{
    width:10vw;
    text-align: center;
    text-decoration: none;
    color:white;
    transition: color 3s ease;
}

nav a:hover {
    color: rgb(241, 6, 167);
}

#red-ball{
    background-color: blueviolet;
    width: 20px;
    height:20px;
    border-radius: 50%;
    position: absolute;
    left:5vw;
    top:0;
    animation: moveBall 5s linear infinite;
}

@keyframes moveBall {
    0% {
        top: 0;
        left: 0;
    }
    25% {
        top: 0;
        left: calc(100vw - 40px);
    }
    50% {
        top:calc(100vh - 40px);
        left: calc(100vw - 40px);
    }
    75% {
        top: calc(100vh - 40px);
        left: 0;
    }
    100% {
        top: 0;
        left: 0;
    }
}

.rotate-in {
    animation: rotateIn 2s ease forwards;
    transform-origin: center; 
}

@keyframes rotateIn {
    0% {
        transform: rotate(-90deg) scale(.25);
        opacity: 0.75; 
    }
    100% {
        transform: rotate(0) scale(.75); 
        opacity: 1;
    }
}

const displayedImage = document.querySelector('.displayed-img');
const thumbBar = document.querySelector('.thumb-bar');

const btn = document.querySelector('button');
const overlay = document.querySelector('.overlay');

/* Declaring the array of image filenames*/
const filenames = ['pic1.jpg', 'pic2.jpg', 'pic3.jpg', 'pic4.jpg', 'pic5.jpg'];

/* decalring the alterantive text for each image file */
const alts = {
    'pic1.jpg' : 'close up tp eye',
    'pic2.jpg' : 'wave rock',
    'pic3.jpg' :'purple flowers',
    'pic4.jpg' : 'egyptian tomb',
    'pic5.jpg' : 'moth on leaf'
}
/* Looping through images */

for(const i of filenames) {
    // construct are ath and alt text
    const nalt = alts[i];
    const narc = `images/${i}`;

    // update images for the thumbnail
    const newImage = document.createElement('img');
    newImage.setAttribute('arc', narc);
    newImage.setAttribute('alt', nalt);
    thumbBar.appendChild(newImage);

    //change displayed image when thumbail is clicked
    newImage.addEventListener('click', () => {
        displayedImage.setAttribute('arc', narc);
        displayedImage.setAttribute('alt', nalt);
    })

}

/* Wiring up the Darken/Lighten button */
btn.addEventListener('click', ()=>{
    const btnClass = btn.getAttribute('class'); //current class of btn

    if(btnClass === 'dark'){
        btn.setAttribute('class', 'light');
        btn.textContent = 'lighten';
        overlay.style.backgroundColor = 'rgb(0 0 0 / 50%)';
    }
    else{
        btn.setAttribute('class', 'dark');
        btn.textContent = 'Darken';
        overlay.style.backgroundColor = 'rgb(0 0 0 / 0%)';
    }
})

// have to update to update the css file and choosing different images


const displayedImage = document.querySelector('.displayed-img');
const thumbBar = document.querySelector('.thumb-bar');

const btn = document.querySelector('button');
const overlay = document.querySelector('.overlay');

/* Declaring the array of image filenames*/
const filenames = ['pic1.jpg', 'pic2.jpg', 'pic3.jpg', 'pic4.jpg', 'pic5.jpg'];

/* decalring the alterantive text for each image file */
const alts = {
    'pic1.jpg': 'Awkward pic of me',
    'pic2.jpg': 'Buildings',
    'pic3.jpg': 'My dog Max',
    'pic4.jpg': 'Space Needle',
    'pic5.jpg': 'Penelope',
};

/* Looping through images */

for(const i of filenames) {
    // construct are ath and alt text
    const nalt = alts[i];
    const narc = `images/${i}`;

    // update images for the thumbnail
    const newImage = document.createElement('img');
    newImage.setAttribute('src', narc);
    newImage.setAttribute('alt', nalt);
    thumbBar.appendChild(newImage);

    //change displayed image when thumbail is clicked
    newImage.addEventListener('click', () => {
        displayedImage.setAttribute('src', narc);
        displayedImage.setAttribute('alt', nalt);
    });

}

/* Wiring up the Darken/Lighten button */

btn.addEventListener('click', () => {
    const btnClass = btn.getAttribute('class');
    if (btnClass === 'dark') {
      btn.setAttribute('class','light');
      btn.textContent = 'Lighten';
      overlay.style.backgroundColor = 'rgba(0,0,0,0.5)';
    } else {
      btn.setAttribute('class','dark');
      btn.textContent = 'Darken';
      overlay.style.backgroundColor = 'rgba(0,0,0,0)';
    }
  });

